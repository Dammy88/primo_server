(function (global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/core'), require('@angular/common/http'), require('@angular/common')) :
    typeof define === 'function' && define.amd ? define('rhc-services-library', ['exports', '@angular/core', '@angular/common/http', '@angular/common'], factory) :
    (factory((global['rhc-services-library'] = {}),global.ng.core,global.ng.common.http,global.ng.common));
}(this, (function (exports,core,http,common) { 'use strict';

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes} checked by tsc
     */
    var CommonApiService = (function () {
        function CommonApiService(http$$1) {
            this.http = http$$1;
        }
        /**
         * @param {?} url
         * @return {?}
         */
        CommonApiService.prototype.commonApiGetService = /**
         * @param {?} url
         * @return {?}
         */
            function (url) {
                return this.http.get(url);
            };
        /**
         * @param {?} url
         * @param {?} body
         * @return {?}
         */
        CommonApiService.prototype.commonApiPostService = /**
         * @param {?} url
         * @param {?} body
         * @return {?}
         */
            function (url, body) {
                return this.http.post(url, body);
            };
        CommonApiService.decorators = [
            { type: core.Injectable },
        ];
        /** @nocollapse */
        CommonApiService.ctorParameters = function () {
            return [
                { type: http.HttpClient, },
            ];
        };
        return CommonApiService;
    }());

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes} checked by tsc
     */
    var HeaderModule = (function () {
        function HeaderModule() {
        }
        HeaderModule.decorators = [
            { type: core.NgModule, args: [{
                        imports: [
                            common.CommonModule,
                            http.HttpClientModule
                        ],
                        declarations: [],
                        providers: [CommonApiService],
                        exports: []
                    },] },
        ];
        return HeaderModule;
    }());

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes} checked by tsc
     */

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes} checked by tsc
     */

    exports.HeaderModule = HeaderModule;
    exports.Éµa = CommonApiService;

    Object.defineProperty(exports, '__esModule', { value: true });

})));

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicmhjLXNlcnZpY2VzLWxpYnJhcnkudW1kLmpzLm1hcCIsInNvdXJjZXMiOlsibmc6Ly9yaGMtc2VydmljZXMtbGlicmFyeS9hcHAvbW9kdWxlcy9oZWFkZXIvY29tbW9uLWFwaS5zZXJ2aWNlLnRzIiwibmc6Ly9yaGMtc2VydmljZXMtbGlicmFyeS9hcHAvbW9kdWxlcy9oZWFkZXIvaGVhZGVyLm1vZHVsZS50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBJbmplY3RhYmxlIH0gZnJvbSBcIkBhbmd1bGFyL2NvcmVcIjtcclxuaW1wb3J0IHsgSHR0cENsaWVudCB9IGZyb20gXCJAYW5ndWxhci9jb21tb24vaHR0cFwiO1xyXG5pbXBvcnQgeyBPYnNlcnZhYmxlIH0gZnJvbSBcInJ4anMvT2JzZXJ2YWJsZVwiO1xyXG5cclxuQEluamVjdGFibGUoKVxyXG5leHBvcnQgY2xhc3MgQ29tbW9uQXBpU2VydmljZSB7XHJcbiAgICBjb25zdHJ1Y3Rvcihwcml2YXRlIGh0dHA6IEh0dHBDbGllbnQpIHsgfVxyXG5cclxuICAgIHB1YmxpYyBjb21tb25BcGlHZXRTZXJ2aWNlKHVybDogc3RyaW5nKSB7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuaHR0cC5nZXQodXJsKTtcclxuICAgIH1cclxuXHJcbiAgICBwdWJsaWMgY29tbW9uQXBpUG9zdFNlcnZpY2UodXJsOiBzdHJpbmcsIGJvZHkpIHtcclxuICAgICAgICByZXR1cm4gdGhpcy5odHRwLnBvc3QodXJsLCBib2R5KTtcclxuICAgIH1cclxufSIsImltcG9ydCB7IE5nTW9kdWxlIH0gZnJvbSBcIkBhbmd1bGFyL2NvcmVcIjtcclxuaW1wb3J0IHsgQ29tbW9uTW9kdWxlIH0gZnJvbSBcIkBhbmd1bGFyL2NvbW1vblwiO1xyXG5pbXBvcnQgeyBIdHRwQ2xpZW50TW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvY29tbW9uL2h0dHAnO1xyXG5pbXBvcnQgeyBDb21tb25BcGlTZXJ2aWNlIH0gZnJvbSBcIi4vY29tbW9uLWFwaS5zZXJ2aWNlXCI7XHJcblxyXG5ATmdNb2R1bGUoe1xyXG4gICAgaW1wb3J0czogW1xyXG4gICAgICAgIENvbW1vbk1vZHVsZSxcclxuICAgICAgICBIdHRwQ2xpZW50TW9kdWxlXHJcbiAgICBdLFxyXG4gICAgZGVjbGFyYXRpb25zOiBbXHJcbiAgICBdLFxyXG4gICAgcHJvdmlkZXJzOiBbQ29tbW9uQXBpU2VydmljZV0sXHJcbiAgICBleHBvcnRzOiBbXVxyXG59KVxyXG5leHBvcnQgY2xhc3MgSGVhZGVyTW9kdWxlIHsgfSJdLCJuYW1lcyI6WyJodHRwIiwiSW5qZWN0YWJsZSIsIkh0dHBDbGllbnQiLCJOZ01vZHVsZSIsIkNvbW1vbk1vZHVsZSIsIkh0dHBDbGllbnRNb2R1bGUiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7QUFBQTtRQU1JLDBCQUFvQkEsT0FBZ0I7WUFBaEIsU0FBSSxHQUFKQSxPQUFJLENBQVk7U0FBSzs7Ozs7UUFFbEMsOENBQW1COzs7O3NCQUFDLEdBQVc7Z0JBQ2xDLE9BQU8sSUFBSSxDQUFDLElBQUksQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUM7Ozs7Ozs7UUFHdkIsK0NBQW9COzs7OztzQkFBQyxHQUFXLEVBQUUsSUFBSTtnQkFDekMsT0FBTyxJQUFJLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxHQUFHLEVBQUUsSUFBSSxDQUFDLENBQUM7OztvQkFUeENDLGVBQVU7Ozs7O3dCQUhGQyxlQUFVOzs7K0JBRG5COzs7Ozs7O0FDQUE7Ozs7b0JBS0NDLGFBQVEsU0FBQzt3QkFDTixPQUFPLEVBQUU7NEJBQ0xDLG1CQUFZOzRCQUNaQyxxQkFBZ0I7eUJBQ25CO3dCQUNELFlBQVksRUFBRSxFQUNiO3dCQUNELFNBQVMsRUFBRSxDQUFDLGdCQUFnQixDQUFDO3dCQUM3QixPQUFPLEVBQUUsRUFBRTtxQkFDZDs7MkJBZEQ7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OzsifQ==